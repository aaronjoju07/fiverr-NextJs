import { Inter } from '@next/font/google'
import { Box, Container, filter, Text } from '@chakra-ui/react'
import Head from 'next/head'
import GigCArd from '../components/GigCArd'
import CategoryButtons from '../components/Category'
import { useEffect, useState } from 'react'
import { collection, doc, getDoc, getDocs, onSnapshot, query, where } from 'firebase/firestore'
import { auth, db } from '../firebase'
import useAuth from '../hooks/useAuth'
import Link from 'next/link'
import { useAuthState } from 'react-firebase-hooks/auth'
import { getAuth } from 'firebase/auth'
import { refreshData } from './api/gigList'
import { async } from '@firebase/util'
import gig from './gigs/[id]'
import { useCollection } from 'react-firebase-hooks/firestore'

const inter = Inter({ subsets: ['latin'] })

export default function Home({gigs}) {
  const [user] = useAuthState(auth);
  // const userId = user.uid
  // const [snapshot, loading, error] = useCollection(collection(db, "Gigs"),where('user', '!=', userId));
  // const gigs = snapshot?.docs.map(doc => ({ id: doc.id, ...doc.data() }));
console.log(gigs)
console.log(user.email)


  return (
    <>
      <Head>
        <title>Fiverr</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/fiverrlogo.svg" />
      </Head>
      <Container maxW="7xl">
        <CategoryButtons />
        <Box p={4} display='flex'>
          {gigs && gigs.map((gig) => (
            <Link
              key={gig.id}
              href={`/gigs/${gig.id}`}
            >
              <GigCArd  key={gig.id} gig={gig} />
            </Link>
          ))}
        </Box>
      </Container>
    </>
  )
}

export async function getServerSideProps(context) {
  const q = await getDocs(collection(db, "Gigs"));
  const gigs = q.docs && q.docs.length > 0 ? q.docs.map((doc) => { 
    return {
      id: doc.id,
      ...doc.data(),
    };
  }) : [];
  return {
    props: {
      gigs
    },
  };
}
